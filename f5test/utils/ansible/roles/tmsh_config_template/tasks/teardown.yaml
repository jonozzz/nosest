---
- shell:
    test -e {{ item.local_dir }} && fusermount -u {{ item.local_dir }} &&
    rmdir {{ item.local_dir }}

  delegate_to: localhost
  run_once: true
  ignore_errors: yes
  with_items: "{{ resources.members }}"
  when: True and item.docker != 'localhost'

- setup:
    fact_path: ~/facts.d
  delegate_to: "{{ item.key }}"
  register: output
  become: true
  become_method: sudo
  become_user: "{{ hostvars[item.key].become_user }}"
  with_dict: "{{ dict(resources.members | groupby('docker')) }}"
  when: item.key != 'localhost'

- shell: "kill {{ f5test_utils.format_list('{}', ansible_local.pids) | join(' ') }}"
  register: output
  ignore_errors: yes
  delegate_to: "{{ item._ansible_delegated_vars.ansible_delegated_host }}"
  with_items: "{{ output.results }}"

- shell:
    test -e {{ item.value.remote_dir }} && rm -rf {{ item.value.remote_dir }}

  run_once: true
  delegate_to: "{{ item.key }}"
  become: true
  become_method: sudo
  become_user: nobody
  ignore_errors: yes
  with_dict_list: "{{ dict(resources.members | groupby('docker')) }}"

- set_fact:
    _: '{{ f5test_respools.get(item) and f5test_respools[item].free_all() }}'

  delegate_to: localhost
  run_once: true
  with_items: '{{ resources }}'

- f5_unmerge:
    address: "{{ ansible_host }}"
    username: "{{ ansible_user }}"
    password: "{{ ansible_ssh_pass }}"
    filename: "/tmp/bigip-{{ machine_fingerprint }}.conf"

- file:
    path: "/tmp/bigip-{{ machine_fingerprint }}.conf"
    state: absent
